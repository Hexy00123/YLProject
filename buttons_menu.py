import logging
import datetime as dt
from config import TOKEN
from telegram import message, Update
from telegram import ReplyKeyboardRemove
from telegram import KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, Dispatcher, CallbackContext

# –∫–æ–Ω—Ç—Ä–æ–ª—å –æ—à–∏–±–æ–∫
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)
# --------------------------------Buttons-------------------------------------------------------------------------------
button_back_to_menu = '–í –º–µ–Ω—é'
# __main menu__
button_help_1 = 'üßæ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π'
button_help_2 = 'üìäFAQ - —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã'
button_help_3 = 'üìÜ–ö–∞–ª–µ–Ω–¥–∞—Ä—å'
button_help_4 = 'üÜò–ü–æ–º–æ—â—å'
button_help_5 = '‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã'
button_help_6 = 'üî¶–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ—Å—Ç–∏'
# __FAQ__
button_help_FAQ_live = 'üõè–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ'
button_help_FAQ_transfer = 'üöå–¢—Ä–∞–Ω—Å—Ñ–µ—Ä'
button_help_FAQ_food = 'ü•ï–ü–∏—Ç–∞–Ω–∏–µ'


# -----------------------Menu-------------------------------------------------------------------------------------------
# üßæ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
def button_help_handler_1(update: Update, context: CallbackContext):
    update.message.reply_text('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', reply_markup=ReplyKeyboardRemove())


# üìäFAQ -—á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
def button_help_handler_2(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=button_help_FAQ_live), KeyboardButton(text=button_help_FAQ_transfer)],
            [KeyboardButton(text=button_help_FAQ_food), KeyboardButton(text=button_back_to_menu)],
        ],
        resize_keyboard=True
    )
    update.message.reply_text(text='–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
                              reply_markup=reply_markup)


def button_help_FAQ_live_handler(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(
        [
            [KeyboardButton(text=button_help_2), KeyboardButton(text=button_back_to_menu)]
        ]
    )
    update.message.reply_text(
        '''–†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ 2 ‚Äî 5 —á–µ–ª–æ–≤–µ–∫ –≤ —Å–≤–µ—Ç–ª—ã—Ö, –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã—Ö –∏ —á–∏—Å—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç–∞—Ö –∫–∞–º–ø—É—Å–∞ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞''',
        reply_keyboard=reply_markup)


def button_help_FAQ_food_handler(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(
        [
            [KeyboardButton(text=button_help_2), KeyboardButton(text=button_back_to_menu)]
        ]
    )
    update.message.reply_text(
        '''–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ 5-—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –°–∞–Ω–ü–∏–ù''', reply_keyboard=reply_markup)


def button_help_FAQ_transfer_handler(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(
        [
            [KeyboardButton(text=button_help_2), KeyboardButton(text=button_back_to_menu)]
        ]
    )
    update.message.reply_text(
        '''–û–±—ã—á–Ω–æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∑–∞–µ–∑–¥–æ–º, –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤''',
        reply_keyboard=reply_markup)


# üìÜ–ö–∞–ª–µ–Ω–¥–∞—Ä—å
def button_help_handler_3(update: Update, context: CallbackContext):
    update.message.reply_text('–ö–∞–ª–µ–Ω–¥–∞—Ä—å', reply_markup=ReplyKeyboardRemove())


# üÜò–ü–æ–º–æ—â—å
def button_help_handler_4(update: Update, context: CallbackContext):
    update.message.reply_text('''–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å
''', reply_markup=ReplyKeyboardRemove())


# ‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã
def button_help_handler_5(update: Update, context: CallbackContext):
    update.message.reply_text('–ö–æ–Ω—Ç–∞–∫—Ç—ã', reply_markup=ReplyKeyboardRemove())


# üî¶–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ—Å—Ç–∏
def button_help_handler_6(update: Update, context: CallbackContext):
    update.message.reply_text('–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ—Å—Ç–∏', reply_markup=ReplyKeyboardRemove())


# ---------------------------------------------Functions----------------------------------------------------------------
def start(update, context):
    update.message.reply_text('Hi!')


def help(update, context):
    update.message.reply_text('''–ü–æ–∫–∞ —á—Ç–æ –≤ –±–æ—Ç–µ –Ω–µ –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥, –Ω–æ –≤–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö:
/keyboard - –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º
/close - —É–±–∏—Ä–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
/description - –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞''')


def message_handler(update, context):
    text = update.message.text
    # Menu
    if text == button_help_1:
        button_help_handler_1(update=update, context=context)
    elif text == button_help_2:
        button_help_handler_2(update=update, context=context)
    elif text == button_help_3:
        button_help_handler_3(update=update, context=context)
    elif text == button_help_4:
        button_help_handler_4(update=update, context=context)
    elif text == button_help_5:
        button_help_handler_5(update=update, context=context)
    elif text == button_help_6:
        button_help_handler_6(update=update, context=context)
    # FAQ
    elif text == button_help_FAQ_live:
        button_help_FAQ_live_handler(update=update, context=context)
    elif text == button_help_FAQ_food:
        button_help_FAQ_food_handler(update=update, context=context)
    elif text == button_help_FAQ_transfer:
        button_help_FAQ_transfer_handler(update=update, context=context)
    elif text == button_back_to_menu:
        keyboard(update=update, context=context)


def keyboard(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=button_help_1), KeyboardButton(text=button_help_2)],
            [KeyboardButton(text=button_help_3), KeyboardButton(text=button_help_4)],
            [KeyboardButton(text=button_help_5), KeyboardButton(text=button_help_6)]
        ],
        resize_keyboard=True
    )
    update.message.reply_text(text='–ö—É, –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π –æ—Ç–∫—Ä—ã–ª–æ—Å—å –º–µ–Ω—é)', reply_markup=reply_markup)


def close(update: Update, context: CallbackContext):
    update.message.reply_text('–ö–Ω–æ–ø–∫–∏ —É–±—Ä–∞–Ω—ã.', reply_markup=ReplyKeyboardRemove())


def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)


# ----------------------------------------------------------------------------------------------------------------------

def main():
    # –±–æ—Ç+–¥–∏—Å–ø–µ—Ç—á–µ—Ä
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help))
    dp.add_handler(CommandHandler('open', keyboard))
    dp.add_handler(CommandHandler('close', close))
    dp.add_handler(MessageHandler(Filters.text, message_handler))

    # ERRORS
    dp.add_error_handler(error)

    updater.start_polling()
    updater.idle()  # ==while True


if __name__ == '__main__':
    main()
